# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on: push

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: |
        mkdir -p target/amd64 target/arm64
        env GOOS=linux GOARCH=amd64 go build -v -o target/amd64/${{ github.event.repository.name }} ./...
        env GOOS=linux GOARCH=arm64 go build -v -o target/arm64/${{ github.event.repository.name }} ./...

    - name: Upload amd64 build
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-linux-amd64
        path: target/amd64/${{ github.event.repository.name }}

    - name: Upload arm64 build
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-linux-arm64
        path: target/arm64/${{ github.event.repository.name }}

    - name: (Main only) Create tag
      uses: actions/github-script@v7
      if: github.ref_name == 'main'
      id: create-tag
      with:
        script: |
          let tag_name = 'refs/tags/v0.' + context.runNumber.toString()
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: tag_name,
            sha: context.sha
          })
          return tag_name

    - name: (Main only) Create release
      uses: softprops/action-gh-release@v2
      if: github.ref_name == 'main'
      with:
        tag_name: ${{ steps.create-tag.outputs.result }}
        files: |
          target/amd64/${{ github.event.repository.name }}
          target/arm64/${{ github.event.repository.name }}
